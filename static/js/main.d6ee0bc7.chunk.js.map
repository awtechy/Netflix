{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","base_url","Row","title","fetchUrl","isLarge","useState","movies","setMovies","useEffect","a","get","request","data","results","className","map","movie","src","poster_path","backdrop_path","alt","name","id","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d6ee0bc7.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL:'https://api.themoviedb.org/3'\n})\n\n\nexport default instance;","import React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport \"./Row.css\";\n\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\nconst Row = ({ title, fetchUrl, isLarge }) => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const request = await axios.get(fetchUrl);\n      //console.log(request.data.results);\n      setMovies(request.data.results);\n    })([fetchUrl]);\n  }, [fetchUrl]);\n  return (\n    <div className=\"row\">\n      <h2>{title}</h2>\n      <div className=\"row__posters\">\n        {movies.map((movie) => {\n          //  console.log(movie);\n          return (\n            <img\n              key={movie.id}\n              className={`row__poster ${isLarge && \"row_posterLarge\"}`}\n              src={\n                isLarge\n                  ? `${base_url}${movie.poster_path}`\n                  : `${base_url}${movie.backdrop_path}`\n              }\n              alt={movie.name}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default Row;\n","const API_KEY = '8488860b263aeefefded602eb1889010';\n\nconst requests = {\n    fetchTrending:`/trending/all/week?api_key=${API_KEY}`,\n    fetchNetflixOriginals:`/discover/tv?api_key=${API_KEY}&with_networks=213`,\n    fetchTopRated:`/movie/top_rated?api_key=${API_KEY}&language=en-US`,\n    fetchActionMovies:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\n    fetchComedyMovies:`/discover/movie?api_key=${API_KEY}&with_genres=35`,\n    fetchHorrorMovies:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\n    fetchRomanceMovies:`/discover/movie?api_key=${API_KEY}&with_genres=10749`,\n    fetchDocumentries:`/discover/movie?api_key=${API_KEY}&with_genres=99`\n}\n\nexport default requests;","import React, { useEffect, useState } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\nconst Banner = () => {\n  const [movie, setMovie] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      const request = await axios.get(requests.fetchNetflixOriginals);\n      setMovie(\n        request.data.results[\n          Math.floor(Math.random() * request.data.results.length - 1)\n        ]\n      );\n    })();\n  }, []);\n  function truncate(str, n) {\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\n  }\n\n  return (\n    <header\n      style={{\n        backgroundSize: \"cover\",\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\n        backgroundPosition: \"cover cover\",\n      }}\n      className=\"banner\"\n    >\n      <div className=\"banner__contents\">\n        <h1 className=\"banner__title\">\n          {movie?.title || movie?.name || movie?.original_name}\n        </h1>\n\n        <div className=\"banner__buttons\">\n          <button className=\"banner_button\">Play</button>\n          <button className=\"banner_button\">My List</button>\n        </div>\n\n        <h1 className=\"banner__description\">\n          {truncate(movie?.overview, 150)}\n        </h1>\n      </div>\n      <div className=\"banner--fadeBottom\" />\n    </header>\n  );\n};\n\nexport default Banner;\n","import React, { useEffect, useState } from \"react\";\nimport \"./Nav.css\";\n\nconst Nav = () => {\n  const [show, handleShow] = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY > 100) {\n        handleShow(true);\n      } else handleShow(false);\n    });\n    return () => {\n      window.removeEventListener(\"scroll\");\n    };\n  }, []);\n  return (\n    <div className={`nav ${show && \"nav__black\"}`}>\n      <img\n        className=\"nav__logo\"\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0f/Logo_Netflix.png\"\n        alt=\"Netflix\"\n      />\n\n      <img\n        className=\"nav__avatar\"\n        src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"\n        alt=\"profile\"\n      />\n    </div>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Nav from \"./Nav\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav />\n      <Banner />\n      <Row\n        isLarge\n        title=\"Netflix originals\"\n        fetchUrl={requests.fetchNetflixOriginals}\n      />\n      <Row title=\"Trending now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentries\" fetchUrl={requests.fetchDocumentries} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}